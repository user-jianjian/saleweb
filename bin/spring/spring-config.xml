<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
		xmlns:beans="http://www.springframework.org/schema/beans"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
	    xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:util="http://www.springframework.org/schema/util"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	default-autowire="byName">
	<!-- 启用aop切面编程注解。 proxy-target-class属性值决定是基于接口的还是基于类的代理被创建。如果proxy-target-class 属性值被设置为true，那么基于类的代理将起作用（这时需要cglib库）。如果proxy-target-class属值被设置为false或者这个属性被省略，那么标准的JDK 基于接口的代理将起作用-->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<!-- 自动搜索需要注入的类 -->
	<context:component-scan base-package="org.walkframework.base.mvc.service" />
	<context:component-scan base-package="org.walkframework.console.mvc.service" /><!-- 加载walk控制台 -->
	<context:component-scan base-package="org.walkframework.activiti.mvc.service" /><!-- 加载activiti -->
	<context:component-scan base-package="com.asiainfo.walk.**.mvc.service" />
	<context:component-scan base-package="com.asiainfo.walk.**.system.security" />
	<context:component-scan base-package="com.asiainfo.walk.**.system.task" />
	
	<!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象 -->  
    <bean class="org.walkframework.base.tools.spring.SpringContextHolder" lazy-init="false" />
	
    <!-- 引入缓存 -->
	<beans:import resource="classpath:spring/cache/spring-${cache.cacheDriver}.xml"/>
	
	<!-- 引入基于redis的会话集群共享 -->
	<beans:import resource="#{'${shiro.sharedSession}'=='true'?'classpath:spring/cache/spring-redis-shared-session.xml':'classpath:base/common/spring/emptyfile.xml'}"/>
	
	<!-- 引入基于redis的订阅/发布器-->
	<beans:import resource="#{'${mq.pubsub.import}'=='true'?'classpath:spring/mq/pubsub/spring-redis-pubsub.xml':'classpath:base/common/spring/emptyfile.xml'}"/>
	
	<!-- 引入redis的队列-->
	<beans:import resource="#{'${mq.queue.import}'=='true'?'classpath:spring/mq/queue/spring-redisqueue.xml':'classpath:base/common/spring/emptyfile.xml'}"/>
	
	<!-- 引入安全框架shiro -->
	<beans:import resource="classpath:spring/shiro/spring-config-shiro.xml"/>
	
	<!-- 引入静态参数缓存加载器 -->
	<beans:import resource="#{'${cache.params.import}'=='true'?'classpath:spring/params/spring-params-loader.xml':'classpath:base/common/spring/emptyfile.xml'}"/>
    
	<!-- 引入数据库相关 -->
	<beans:import resource="classpath:spring/ds/ds-dbcp.xml"/>
	
	<!-- 引入springmvc-->
	<beans:import resource="#{'${spring.boot.mvc.load}'=='true'?'classpath:spring/spring-mvc.xml':'classpath:base/common/spring/emptyfile.xml'}"/>
	
	<!-- 引入定时导出处理器监听-->
	<beans:import resource="#{'${export.timing.enable}'=='true'?'classpath:spring/common/spring-timingexport.xml':'classpath:base/common/spring/emptyfile.xml'}"/>
	
    <!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
	<bean id="messageSource" class="org.walkframework.base.tools.i18n.CustomReloadableResourceBundleMessageSource">
	    <property name="basenames">
	        <list>
	            <value>classpath:message/Messages</value><!-- 工程自己的国际化文件 -->
	        </list>
	    </property>
	    <property name="useCodeAsDefaultMessage" value="false"/>
	    <property name="defaultEncoding" value="UTF-8"/>
	    <property name="productMode" value="${productMode}"/>
	    <property name="cacheSeconds" value="5"/><!-- 开发模式默认5秒刷新一次 -->
	</bean>
	
	<!-- 本地化解析器 -->
	<bean id="localeResolver" class="org.walkframework.base.tools.i18n.CustomCookieLocaleResolver">
	    <property name="cookieName" value="locale"/>
	    <property name="cookieMaxAge" value="-1"/>
	    <property name="defaultLocale" value="zh_CN"/>
	</bean>
	
</beans>
